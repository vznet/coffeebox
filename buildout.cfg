[buildout]
dump-picked-versions-file = missing_versions.cfg
#develop = .
versions = versions
parts =
        nodejs
        create_symlinks
        npm
        npm-bin
        templates
        supervisor
        instance
        npm-packages
        coffee-bin
        tar-this-helper

extensions = lovely.buildouthttp
             buildout.dumppickedversions
hooks-directory = ${buildout:directory}/hooks

[config]
supervisord-port=9090

[nodejs]
recipe = hexagonit.recipe.cmmi
# need to use 0.5.0 for now due to ``express`` dependency
url=http://nodejs.org/dist/node-v${versions:nodejs}.tar.gz
# url = http://nodejs.org/dist/v${versions:nodejs}/node-v${versions:nodejs}.tar.gz
strip-top-level-dir = true
make-options=-j4

[npm]
recipe = collective.recipe.cmd
location=${buildout:parts-directory}/npm
on_install = true
on_update = false
cmds =
  mkdir -p ${buildout:parts-directory}/npm/bin
  cd ${buildout:parts-directory}/npm/bin/
  ln -sf ${nodejs:location}/bin/node .
  mkdir -p ${buildout:parts-directory}/npm/lib
  cd ${buildout:parts-directory}/npm/lib/
  ln -sf ${nodejs:location}/lib/* .
  mkdir -p ${buildout:parts-directory}/npm/share
  cd ${buildout:parts-directory}/npm/share/
  ln -sf ${nodejs:location}/share/* .
  cd ${buildout:parts-directory}/npm/
  _PATH=$PATH
  PATH=${buildout:parts-directory}/npm/bin:$PATH
  NPM_INSTALLER=$(pwd)/install-npm.sh               
  [ -f $NPM_INSTALLER ] || /usr/bin/curl http://npmjs.org/install.sh -o $NPM_INSTALLER
  chmod 0755 $NPM_INSTALLER
  echo "yes\n"|$NPM_INSTALLER
  PATH=$_PATH

[create_symlinks]
recipe = collective.recipe.cmd
on_install = true
on_update = true
dependency=${npm:recipe}
cmds =
  cd ${buildout:directory}/bin
  ln -sf ${nodejs:location}/bin/node .
  ln -sf ${nodejs:location}/bin/node-waf .

[instance]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/instance
mode = 0755
content = #!/bin/sh
 ${nodejs:location}/bin/node ${buildout:directory}/src/app/app.js $@

[npm-bin]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/npm
mode = 0755
content = #!/bin/sh
 PATH=${nodejs:location}/bin:$PATH 
 ${npm:location}/bin/npm $@

[npm-packages]
recipe = collective.recipe.cmd
dependency=${npm-bin:recipe}
on_install = true
on_update = false 
cmds =  
  ${buildout:directory}/bin/npm install express
  ${buildout:directory}/bin/npm install coffee-script
  ${buildout:directory}/bin/npm install mustache

[coffee-bin]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/coffee
mode = 0755
content = #!/bin/sh
 PATH=${nodejs:location}/bin:$PATH 
 ${nodejs:location}/bin/coffee $@


[tar-this-helper]
recipe = lovely.recipe:mkfile
path = ${buildout:bin-directory}/tar-this
mode = 0755
content = #!/bin/sh
  foldername=`basename $(pwd)`
  tar -czvf /tmp/$foldername.tgz \
    --exclude="../$foldername/parts" \
    --exclude="../$foldername/node_modules" \
    --exclude="../$foldername/downloads" \
    --exclude="../$foldername/var" \
    --exclude="../$foldername/.installed.cfg" \
    --exclude="../$foldername/bin" \
    ../$foldername

[supervisor]
recipe = zc.recipe.egg:script
relative-paths=true
scripts=supervisord
        supervisorctl
eggs = supervisor
port = ${config:supervisord-port}
initialization = import sys
                 sys.argv[1:1] = ['-c', '${buildout:directory}/parts/supervisor/supervisor.conf']

[templates]
recipe = z3c.recipe.filetemplate
source-directory = template
force-overwrite = true
interpreted-options = hostname
hostname = os.uname()[1].lstrip('wlan.').split('.')[0]

[versions]
nodejs = 0.4.9
collective.recipe.cmd = 0.5
hexagonit.recipe.cmmi = 1.4.0
lovely.recipe = 1.0.0
hexagonit.recipe.download = 1.4.1
zc.recipe.egg = 1.3.2
setuptools = 0.6c12dev-r88846
supervisor = 3.0a9
z3c.recipe.filetemplate = 2.1.
meld3 = 0.6.7
